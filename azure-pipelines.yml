trigger:
  branches:
    include:
      - main
  
pr:
  branches:
    include:
      - '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  projectPath: 'SampleWebApiAspNetCore/SampleWebApiAspNetCore.csproj'
  dockerImageName: 'samplewebapiaspnetcore-webapi'
  dockerHubUsername: 'qqvky'  
  webAppName: 'pruvit123'  

stages:
- stage: Build
  displayName: 'Build and Test'
  jobs:
  - job: BuildAndTest
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '7.0.x'
    
    - task: DotNetCoreCLI@2
      displayName: 'Restore'
      inputs:
        command: 'restore'
        projects: '$(projectPath)'
    
    - task: DotNetCoreCLI@2
      displayName: 'Build'
      inputs:
        command: 'build'
        projects: '$(projectPath)'
        arguments: '--configuration $(buildConfiguration) --no-restore'
    
    - task: DotNetCoreCLI@2
      displayName: 'Test'
      inputs:
        command: 'test'
        projects: '**/*Tests.csproj'
        arguments: '--configuration $(buildConfiguration) --no-build'
      continueOnError: true
    
    - task: Docker@2
      displayName: 'Build Docker Image'
      inputs:
        containerRegistry: 'dockerhub-conn'
        repository: '$(dockerHubUsername)/$(dockerImageName)'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(Build.BuildId)
          latest
        buildContext: '$(Build.SourcesDirectory)'
    
    - task: Docker@2
      displayName: 'Push Docker Image to DockerHub'
      inputs:
        containerRegistry: 'dockerhub-conn'
        repository: '$(dockerHubUsername)/$(dockerImageName)'
        command: 'push'
        tags: |
          $(Build.BuildId)
          latest

- stage: Deploy
  displayName: 'Deploy to Azure Web App'
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - job: DeployToWebApp
    steps:
    - task: AzureWebAppContainer@1
      displayName: 'Deploy to Azure Web App'
      inputs:
        azureSubscription: 'food-conn'
        appName: '$(webAppName)'
        imageName: '$(dockerHubUsername)/$(dockerImageName):latest'